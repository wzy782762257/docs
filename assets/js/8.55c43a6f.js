(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{288:function(e,v,a){"use strict";a.r(v);var t=a(14),_=Object(t.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"es6-新增语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#es6-新增语法"}},[e._v("#")]),e._v(" ES6 新增语法")]),e._v(" "),v("h2",{attrs:{id:"let-命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#let-命令"}},[e._v("#")]),e._v(" let 命令")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("    // 用来定义变量.用法和 var 类似,但是所声明的变量,只在 let 命令所在的代码块内有效\n    {\n    let a = 1;\n    var b = 2;\n    }\n\n        a // ReferenceError: a is not defined\n        b // 2\n")])])]),v("p",[e._v("上边代码在代码块中分别用了它和 "),v("code",[e._v("var")]),e._v(" 声明了两个变量.然后在代码块之外调用这两个变量,结果 "),v("code",[e._v("let")]),e._v(" 声明的变量报错,"),v("code",[e._v("var")]),e._v(" 声明的变量返回了正确的值.这表明, "),v("code",[e._v("let")]),e._v(" 声明的变量只在它所在的代码块有效.")]),e._v(" "),v("p",[v("code",[e._v("for")]),e._v("循环的计数器,就很适合 let 命令")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("    for (let i = 0; i < 10; ++i) {\n        // ...\n    }\n\n    console.log(i);\n    // ReferenceError: i is not defined\n")])])]),v("p",[e._v("上面代码中,计数器"),v("code",[e._v("i")]),e._v("只在"),v("code",[e._v("for")]),e._v("循环内有效,在循环体外引用就回报错.")]),e._v(" "),v("p",[e._v("下面的代码如果使用 var,最后输出的是"),v("code",[e._v("10")]),e._v(".")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("    var a = [];\n    for (var i = 0; i < 10; ++i) {\n        a[i] = function () {\n            console.log(i);\n        };\n    }\n    a[6](); // 10\n")])])]),v("p",[e._v("上面代码中,变量"),v("code",[e._v("i")]),e._v("是"),v("code",[e._v("var")]),e._v("命令声明的,在全局范围内都有效,所以全局只有一个"),v("code",[e._v("i")]),e._v(".每一次循环,变量"),v("code",[e._v("i")]),e._v("的值都会发生改变,而循环内被赋值给数组"),v("code",[e._v("a")]),e._v("的函数内部的"),v("code",[e._v("console.log(i)")]),e._v(",里面"),v("code",[e._v("i")]),e._v("指向的就是全局的"),v("code",[e._v("i")]),e._v(".也就是说,所有数组"),v("code",[e._v("a")]),e._v("的成员里面的"),v("code",[e._v("i")]),e._v(",指向的都是同一个"),v("code",[e._v("i")]),e._v(",导致运行时输出的是最后一轮的"),v("code",[e._v("i")]),e._v("的值,也就是"),v("strong",[e._v("10")])])])}),[],!1,null,null,null);v.default=_.exports}}]);